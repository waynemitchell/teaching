Multigrid course: 

9:15 - 10:45, 11:15 - 12:45, lunch, 14:15 - 15:45
First two blocks are lecture, last is exercises plus Q&A

Lectures: 2x 90 min. 
Each block, say 30 slides max.

Exercises:
1.5 hours... ish
https://colab.research.google.com/github/
https://colab.research.google.com/github/copper-multigrid-conference/2019-tutorials/
https://github.com/copper-multigrid-conference/2019-tutorials

===============================================================

Day 1: Motivation and basic iterative methods
Session 1: 
   Introduction
   Motivation
   Preliminaries and a model problem
   Basic iterative methods
Session 2:
   Krylov subspace methods
   Preconditioning Krylov methods
Exercises: 
   Jacobi and GS on some different problems
   Visualize smoothing and forshadow multigrid
   Show examples where Jacobi and GS converge and don't converge
   CG: show complete convergence in n steps, good convergence in far less
   Show convergence rate and theoretical convergence rate.
   PCG: what preconditioners can I show? Show condition of A and M^-1A


Day 2: Basics of multigrid
Session 1: 
   Introduction
   Basic iterative methods on a model problem
   Towards multigrid
Session 2: 
   Components of multigrid
   Some basic convergence theory
   Other stuff?
Exercises:
   Show smoothing of Jacobi with different weights and Gauss-Seidel
   Show case where the solution is oscillatory (i.e. not representable on a coarse grid) but the error after relaxation is smooth


Day 3: Algebraic Multigrid
Session 1: motivation for algebraic methods, algebraic smoothness
Session 2: the A norm and optimality of the correction, RS AMG, SA?
Exercises:


Day 4: Extensions and special topics
Session 1: AMG for non-pde problems (graphs), nonsymmetric MG
Session 2: nonlinear MG, FAS, Newton MG
Exercises:


Day 5: Parallel multigrid and future directions
Session 1: the hypre story
Session 2: GPUs and motivation, AMG-DD
Exercises:

===============================================================

General notes:
Make it friendly for non-math folks!!! 
   1. Explain the difference between symmetric and non-symmetric problems
   2. Explain condition number of problems, make many references throughout as to why poor conditioning is hard to solve
   3. Explain orthogonality? Certainly A-orthogonality.
   4. Eigenvalues and eigenvectors. Spans and subspaces.
   5. Define inner products and norms

===============================================================

Day 1: Motivation and basic iterative methods
Briefly introduce the model problem and use it in the exercises (or as a demonstration problem during lecture), but don't get into too much detail with eigenmodes, etc.
Linear scaling is important if you want to solve large problems on large machines. 
Don’t forget to include reference to books (e.g. multigrid tutorial), seminal papers, etc.
Look at behavior of iterative methods on model problem, namely start hinting at their qualitative smoothing properties so that you can reference this again the next day.

===============================================================

Day 2: Basics of multigrid
Question: What's the argument for full coarsening instead of injection? Why do you end up with R = cP^T instead of just R = P^T?
Why is solving the residual equation for the correction important again? Right, residual is smooth, solution not necessarily smooth. So the solution is not necessarily representable on a coarse grid, but the error is.
Soldiers in a line problem?
Return to the model Poisson problem and this time go into more detail.
Eigenvectors are the sine modes. 
Jacobi is easily applied and attenuates some of these modes effectively: it is a smoother.
Smooth becomes oscillatory on a coarser scale: two level.
Recurse to get multilevel.
How far do I want to generalize? I actually don't know geometric multigrid super well when it comes to more difficult problems with variable coefficients and anisotropies in different parts of the domain, etc. The Copper slides go over this a bit, variational coarsening etc.... Need to read up myself. Related to AMG, so might be good to mention.
Things to show in visualizing basic iterative methods:
   1. They smooth the residual. Even if the error is oscillatory, the residual is smooth and can be represented on a coarse grid.
   2. Show that unweighted Jacobi doesn't damp the highest frequencies for the model problem. You need to use the appropriate weight to get the smoothing property.

===============================================================

Day 3: Algebraic Multigrid
Start again with Poisson, then generalize.
Eventually, if everything is algebraic, you can solve even non-elliptic problems or problems that do not come from PDEs.
	Show AIR stuff.
	Show graph stuff.

===============================================================

Day 4: Extensions and special topics

===============================================================

Day 5: Parallel multigrid and future directions
Look through Rob’s slides
I can pretty much tell a lot of the hypre development story at this point, I think: development of parallel coarsening and interpolation strategies, etc. 
New ideas in parallel MG: Communication limitedness on large modern machines
NIRD/AMG-DD

===============================================================

Exercises:
Fuck around with jupyter or ipynb (same thing?) for demonstrations:
1. Show fill in for solving Poisson with Gaussian Elimination.
2. Discretization accuracy: show analytic solution, exact discrete solution, approximate discrete solution.


